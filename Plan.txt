基本的模块：
schedule.cpp
命名空间:Nschedule


library.cpp
命名空间:Nlibrary
定义了完成书籍管理所需要的类。

users.cpp
命名空间:Nusers
定义了完成用户管理所需要的类。

iosystem.cpp
命名空间:Nios
定义了输入输出的函数/方法，以及加密算法。

GUI.cpp *
命名空间:Ngui
定义了实现可视化界面的一些函数/方法
*可能的话需要对Linux(Debian/Unity)、Windows分别实现该模块
*这样做的目的是保证程序的可移植性。在跨平台/采用不同的GUI方案时，只需重新编写GUI.cpp即可，在main.cpp里无需修改。

Plugin.cpp ##
命名空间:Nplugin
实现插件功能。
插件使用Lisperarian脚本语言编写。这个库里包含对解释器的实现。
##这个任务目标不是必须的，在前三者实现的基础上再实现这个目标。


main.cpp
主程序，作用是把各个模块串联起来形成可用程序。


*****************************************************************
功能的具体归属类
添加图书 		TLibrary
删除图书 		TLibrary
借阅        	TLibrary
续借        	TLibrary
设定图书属性	TLibrary
新用户注册		TUsers
用户登录		TUsers
删除用户
“请求”(Request)的种类及其代码：
0:新用户注册。
1:老用户登录。
2:用户登出。
3:借阅书籍。
4:归还书籍。
5:修改用户昵称。
6:修改用户密码。
7:添加书籍。
8:删除书籍。
9:设定图书属性。
10:删除用户。
11:改变用户状态。

 
